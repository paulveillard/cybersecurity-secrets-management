# Policy that requires keys of secrets with name "zipcode", "zip-code", or
# "zip_code" to be a valid 5-digit U.S. zipcode
# For use with Vault KV v1 and v2 secrets engines

# Function that validates zip codes
validate_zip_codes = func() {

  # Print some information about the request
  # Note that these messages will only be printed when the policy is violated
  print("Namespace path:", namespace.path)
  print("Request path:", request.path)
  print("Request data:", request.data)

  # Test for request.data for kv v1

  # Test for "zipcode" key
  if "zipcode" in keys(request.data) {
    if request.data.zipcode not matches "^[0-9]{5}$" {
      print("Invalid zip code")
      return false
    }
  }

  # Test for "zip_code" key
  if "zip_code" in keys(request.data) {
    if request.data.zip_code not matches "^[0-9]{5}$" {
      print("Invalid zip code")
      return false
    }
  }

  # Test for "zip-code" key
  if "zip-code" in keys(request.data) {
    # Using `request.data.zip-code` gives error
    if request.data["zip-code"] not matches "^[0-9]{5}$" {
      print("Invalid zip code")
      return false
    }
  }

  # Test for request.data.data for kv v2

  # Test for "zipcode" key
  if "data" in keys(request.data) and "zipcode" in keys(request.data.data) {
    if request.data.data.zipcode not matches "^[0-9]{5}$" {
      print("Invalid zip code")
      return false
    }
  }

  # Test for "zip_code" key
  if "data" in keys(request.data) and "zip_code" in keys(request.data.data) {
    if request.data.data.zip_code not matches "^[0-9]{5}$" {
      print("Invalid zip code")
      return false
    }
  }

  # Test for "zip-code" key
  if "data" in keys(request.data) and "zip-code" in keys(request.data.data) {
    if request.data.datazip-code not matches "^[0-9]{5}$" {
      print("Invalid zip code")
      return false
    }
  }

  return true

}

# Main Rule
zip_codes_validated = validate_zip_codes()
main = rule {
  zip_codes_validated
}
